name: Run Selenium TestNG Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment"
        required: true
        default: "qa"
        type: choice
        options:
          - qa
          - uat

      browser:
        description: "Select browser"
        required: true
        default: "chrome"
        type: choice
        options:
          - chrome
          - firefox

      suite:
        description: "Select TestNG suite to run"
        required: true
        default: "testng-ui-tests.xml"
        type: choice
        options:
          - testng-ui-tests.xml
          - testng-api-tests.xml

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      ENV: ${{ github.event.inputs.environment }}
      BROWSER: ${{ github.event.inputs.browser }}
      SUITE: ${{ github.event.inputs.suite }}
      TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run TestNG Tests
        run: |
          echo "Running suite: $SUITE"
          cd tests/selenium-testng
          mvn test -DsuiteXmlFile=src/test/resources/$SUITE -Dbrowser=$BROWSER -Denv=$ENV -Dusername=$TEST_USERNAME -Dpassword=$TEST_PASSWORD -DisHeadless=true

      - name: Deploy Extent Report to GitHub Pages
        if: always()
        run: |
          # Set variables
          DATE=$(date -u +"%Y-%m-%d-%-H:%M:%S")UTC
          REPORT_FILE="tests/selenium-testng/test-output/extent-report-${BROWSER}.html"
          REPORT_NAME="extent-report-${BROWSER}-${DATE}.html"
          RUN_NUMBER=${{ github.run_number }}
          
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

          # Clone gh-pages branch
          git clone --quiet --branch=gh-pages https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages

          # Copy report
          cp "$REPORT_FILE" "gh-pages/${REPORT_NAME}"

          # Add clickable link with date/time stamp to index.html
          cd gh-pages

          # Create index.html if missing
          if [ ! -f index.html ]; then
            echo "<html><body><h1>Test Reports</h1><ul></ul></body></html>" > index.html
          fi

          # Insert new report link before closing </ul>
          
          # Insert new report link before closing </ul>
          sed -i "/<\/ul>/i <li><a href='./${REPORT_NAME}'>${BROWSER} Report - Run ${RUN_NUMBER} - ${DATE}</a></li>" index.html


          git add "$REPORT_NAME" index.html
          git commit -m "üìù Add link to ${REPORT_NAME}" || echo "No changes to commit"
          git push
